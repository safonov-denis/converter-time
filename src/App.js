import React, { useState, useEffect } from 'react';
import './App.css';
import OmniToHumanDateConverter from './OmniToHumanDateConverter';
import UnixToHumanDateConverter from './UnixToHumanDateConverter';
import HumanDateToOmniConverter from './HumanDateToOmniConverter';
import HumanDateToUnixConverter from './HumanDateToUnixConverter';
import OmniToUnixTimestampConverter from './OmniToUnixTimestampConverter';
import UnixToOmniTimestampConverter from './UnixToOmniTimestampConverter';
import logo from './logo.png';

function App() {
  const [unixTimestamp, setUnixTimestamp] = useState(getUnixTimestamp());
  const [omniTimestamp, setOmniTimestamp] = useState(getOmniTimestamp());
  const [darkMode, setDarkMode] = useState(true);
  const [isHoveringOmni, setIsHoveringOmni] = useState(false);
  const [isHoveringUnix, setIsHoveringUnix] = useState(false);
  const [isMouseOverOmni, setIsMouseOverOmni] = useState(false);
  const [isMouseOverUnix, setIsMouseOverUnix] = useState(false);

  function getUnixTimestamp() {
    return Math.floor(Date.now() / 1000);
  }

  function getOmniTimestamp() {
    return Math.floor(Date.now() / 1000) - 1230768000;
  }

  function toggleDarkMode() {
    setDarkMode(!darkMode);
  }

  function handleOmniMouseEnter() {
    setIsHoveringOmni(true);
  }

  function handleOmniMouseLeave() {
    setIsHoveringOmni(false);
  }

  function handleUnixMouseEnter() {
    setIsHoveringUnix(true);
  }

  function handleUnixMouseLeave() {
    setIsHoveringUnix(false);
  }

  useEffect(() => {
    const timer = setInterval(() => {
      if (!isHoveringOmni && !isMouseOverOmni) {
        setOmniTimestamp(getOmniTimestamp());
      }
      if (!isHoveringUnix && !isMouseOverUnix) {
        setUnixTimestamp(getUnixTimestamp());
      }
    }, 1000);

    return () => {
      clearInterval(timer);
    };
  }, [isHoveringOmni, isHoveringUnix, isMouseOverOmni, isMouseOverUnix]);

  return (
    <div className={`App ${darkMode ? 'dark' : 'light'}`}>
      <header className={`App-header ${darkMode ? 'dark' : 'light'}`}>
        <div className="logo">
          <img className="logo-image" src={logo} alt="Logo" />
          <span>ONVERTERTIME</span>
        </div>
        <div className="timestamps">
          <div className="timestamp">
            <label>OMNI TIMESTAMP</label>
            <span
              onMouseEnter={handleOmniMouseEnter}
              onMouseLeave={handleOmniMouseLeave}
              onMouseOver={() => setIsMouseOverOmni(true)}
              onMouseOut={() => setIsMouseOverOmni(false)}
            >
              {omniTimestamp}
            </span>
            <label>SECONDS SINCE 01 JAN 2009 (UTC)</label>
          </div>
          <div className="timestamp">
            <label>UNIX TIMESTAMP</label>
            <span
              onMouseEnter={handleUnixMouseEnter}
              onMouseLeave={handleUnixMouseLeave}
              onMouseOver={() => setIsMouseOverUnix(true)}
              onMouseOut={() => setIsMouseOverUnix(false)}
            >
              {unixTimestamp}
            </span>
            <label>SECONDS SINCE 01 JAN 1970 (UTC)</label>
          </div>
        </div>
        <button className="dark-mode-button" onClick={toggleDarkMode}>
          {darkMode ? 'День' : 'Ночь'}
        </button>
      </header>
      <section className="widgets">
        <OmniToHumanDateConverter />
        <UnixToHumanDateConverter />
        <HumanDateToOmniConverter />
        <HumanDateToUnixConverter />
        <OmniToUnixTimestampConverter />
        <UnixToOmniTimestampConverter />
      </section>
      <footer className="App-footer">
        <p>2023 ConverterTime. Made with love and ChatGPT. </p>
        <p>Logo generated by Midjourney. </p>
      </footer>
    </div>
  );
}

export default App;